# -*- mode: ruby -*-
# vi: set ft=ruby :
# D:\VirtualBox => Các cấu hình được lưu trữ tại đây


Vagrant.configure("2") do |config|
  # Base box Ubuntu 22.04 LTS
  config.vm.box = "ubuntu/jammy64"
  
  # Cấu hình chung cho tất cả máy ảo
  config.vm.boot_timeout = 600  # Tăng timeout lên 10 phút
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "3104"
    vb.cpus = 2
    vb.gui = false  # Bật GUI để debug
    # Tối ưu VirtualBox
    vb.customize ["modifyvm", :id, "--vram", "16"]
    vb.customize ["modifyvm", :id, "--accelerate3d", "off"]
  end

  # Định nghĩa 3 máy ảo K8s
  machines = [
    { name: "redis-server-1", ip: "192.168.1.180", memory: 2048, cpus: 2, disk: 15 },
    { name: "redis-server-2", ip: "192.168.1.181", memory: 2048, cpus: 2, disk: 15 },
    { name: "redis-server-3", ip: "192.168.1.182", memory: 2048, cpus: 2, disk: 15 },
  ]

  machines.each do |machine|
    config.vm.define machine[:name] do |node|
      # Hostname
      node.vm.hostname = machine[:name]
      
      # Network - Bridge mode với IP tĩnh
      node.vm.network "public_network", 
        ip: machine[:ip],
        netmask: "255.255.255.0",
        bridge: "Realtek 8852CE WiFi 6E PCI-E NIC"
      
      # Provider-specific settings
      node.vm.provider "virtualbox" do |vb|
        vb.name = machine[:name]
        vb.memory = machine[:memory]
        vb.cpus = machine[:cpus]
        
        # Tối ưu cho K8s
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
        
      end

      # Provisioning script chung
      node.vm.provision "shell", inline: <<-SHELL
        # Update system
        apt-get update
        apt-get upgrade -y
        
        # Cấu hình hosts file
        cat >> /etc/hosts << 'EOF'
127.0.0.1 localhost
192.168.1.180 redis-server-1
192.168.1.181 redis-server-2
192.168.1.182 redis-server-3
EOF

        # Cấu hình netplan cho IP tĩnh
        cat > /etc/netplan/50-vagrant.yaml << 'EOF'
network:
  version: 2
  ethernets:
    enp0s8:
      dhcp4: false
      addresses:
        - #{machine[:ip]}/24
      gateway4: 192.168.1.1
      nameservers:
        addresses:
          - 8.8.8.8
          - 8.8.4.4
EOF

        netplan apply
        apt update -y
        apt upgrade -y

        apt install -y net-tools telnet traceroute

        # -----> Cài đặt Redis <-----
        # sudo apt install -y lsb-release curl gpg
        # curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
        # echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
        # sudo apt update -y
        # sudo apt install -y redis redis-sentinel


        # -----> Thực hiện trên server 1 <-----
        # vi /etc/redis/redis.conf
        # bind 0.0.0.0
        # masterauth bodevops
        # requirepass bodevops

        # systemctl restart redis-server
        # systemctl enable redis-server
        # systemctl status redis-server

        # -----> Thực hiện trên server 2 và server 3 <-----
        # vi /etc/redis/redis.conf
        # bind 0.0.0.0
        # masterauth bodevops
        # requirepass bodevops
        # replicaof 192.168.213.11 6379
        
        # systemctl restart redis-server
        # systemctl enable redis-server
        # systemctl status redis-server

        # Thực hiện trên server 1
        # redis-cli

      SHELL
    end
  end
end